name: deploy
on:
  workflow_call:
  workflow_dispatch:
jobs:
  check-secrets:
    runs-on: ubuntu-24.04
    outputs:
      run-with-secrets: ${{ steps.require-secrets.outputs.run-with-secrets }}
    steps:
      - name: Find if secrets are available
        id: detect-secrets
        uses: DanySK/are-secrets-available@1.0.0
        with:
          secrets: ${{ toJson(secrets) }}
      - name: Set condition
        id: require-secrets
        run: |
          echo "run-with-secrets=${{ steps.detect-secrets.outputs.has-secrets == 'true' && !github.event.repository.fork }}" >> $GITHUB_OUTPUT

  release:
    name: Release
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: deploy
    runs-on: ubuntu-latest
    needs: 
      - check-secrets
    if: needs.check-secrets.outputs.run-with-secrets == 'true'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # all history
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Get All Tags
        run: git fetch --tags -f

      - name: Install Poetry
        run: pip install -r requirements.txt

      - name: Restore Development Environment
        run: poetry install

      - name: Change default logging level
        run: sed -i -e 's/DEBUG/WARN/g' dpongpy/log.py

      - name: Get Node Version
        id: get-node-version
        run: echo version=$(jq -r .engines.node package.json) >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.get-node-version.outputs.version }}

      - name: Release
        shell: bash
        run: |
          npm install
          npx semantic-release --branches `git branch --show-current`
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          RELEASE_TEST_PYPI: ${{ contains(github.repository, 'template') }}
          RELEASE_DRY_RUN: ${{ github.ref_name != 'master' && github.ref_name != 'main' }}
